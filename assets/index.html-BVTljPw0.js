import{a as u,c as y,d as s,b as h,e as n,f as t,w as e,r as l,o as f}from"./app-C7AwxLk6.js";const x={},b={class:"vp-steps"},w={class:"vp-field-group"};function v(k,a){const o=l("VPIcon"),i=l("VPField"),c=l("Annotation"),d=l("Tabs"),m=l("VPCard"),g=l("VPCardGrid");return f(),y("div",null,[a[35]||(a[35]=s("p",null,"Search algorithms are fundamental to AI, providing a systematic way for an agent to find a sequence of actions to accomplish its goals. Instead of acting reflexively, a problem-solving agent plans ahead.",-1)),a[36]||(a[36]=s("h3",{id:"the-problem-solving-process",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#the-problem-solving-process"},[s("span",null,"The Problem-Solving Process")])],-1)),a[37]||(a[37]=s("p",null,"An intelligent agent typically follows a four-phase process to solve problems.",-1)),s("div",b,[s("ol",null,[s("li",null,[s("p",null,[a[0]||(a[0]=s("strong",null,"Formulate Goal",-1)),a[1]||(a[1]=t()),n(o,{provider:"iconify",name:"mdi:flag-checkered"}),a[2]||(a[2]=t(" First, the agent determines a desired future state. This goal is the target it aims to reach.",-1))])]),s("li",null,[s("p",null,[a[3]||(a[3]=s("strong",null,"Formulate Problem",-1)),a[4]||(a[4]=t()),n(o,{provider:"iconify",name:"mdi:puzzle-edit"}),a[5]||(a[5]=t(" Next, the agent defines the problem in a formal way. This involves describing the possible states of the world and the actions it can take to transition between them.",-1))])]),s("li",null,[s("p",null,[a[6]||(a[6]=s("strong",null,"Search",-1)),a[7]||(a[7]=t()),n(o,{provider:"iconify",name:"mdi:magnify"}),a[8]||(a[8]=t(" The agent explores possible action sequences to find one that leads from the initial state to the goal state. This sequence is called a ",-1)),a[9]||(a[9]=s("strong",null,"solution",-1)),a[10]||(a[10]=t(".",-1))])]),s("li",null,[s("p",null,[a[11]||(a[11]=s("strong",null,"Execute",-1)),a[12]||(a[12]=t()),n(o,{provider:"iconify",name:"mdi:play-box"}),a[13]||(a[13]=t(" Finally, the agent performs the actions found in the solution, one by one.",-1))])])])]),a[38]||(a[38]=s("hr",null,null,-1)),a[39]||(a[39]=s("h3",{id:"problem-formulation",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#problem-formulation"},[s("span",null,"Problem Formulation")])],-1)),a[40]||(a[40]=s("p",null,"To solve a problem using search, we must first define it precisely. This involves specifying five key components:",-1)),s("div",w,[n(i,{name:"States",required:"",type:"Descriptions of the world"},{default:e(()=>a[14]||(a[14]=[s("p",null,[t("A representation of the world's configuration. This includes the "),s("strong",null,"initial state"),t(" (where the agent begins) and one or more "),s("strong",null,"goal states"),t(". The set of all states reachable from the initial state is called the "),s("strong",null,"state space"),t(".")],-1)])),_:1,__:[14]}),n(i,{name:"Actions",required:"",type:"Operators"},{default:e(()=>a[15]||(a[15]=[s("p",null,[t("The set of possible actions available to the agent in a given state "),s("code",null,"s"),t(", often represented as "),s("code",null,"ACTIONS(s)"),t(".")],-1)])),_:1,__:[15]}),n(i,{name:"Transition Model",required:"",type:"`RESULTS(s, a)`"},{default:e(()=>a[16]||(a[16]=[s("p",null,[t("This model describes what happens when the agent performs an action. "),s("code",null,"RESULTS(s, a)"),t(" returns the new state that results from performing action "),s("code",null,"a"),t(" in state "),s("code",null,"s"),t(".")],-1)])),_:1,__:[16]}),n(i,{name:"Action Cost",optional:"",type:"`c(s, a, s')`"},{default:e(()=>a[17]||(a[17]=[s("p",null,[t("A function that assigns a numeric cost to taking action "),s("code",null,"a"),t(" in state "),s("code",null,"s"),t(" to reach state "),s("code",null,"s'"),t(". The total cost of a path is the sum of its individual action costs.")],-1)])),_:1,__:[17]}),n(i,{name:"Goal Test",required:"",type:"Constraint"},{default:e(()=>a[18]||(a[18]=[s("p",null,"A function that determines whether a given state is a goal state.",-1)])),_:1,__:[18]})]),a[41]||(a[41]=h('<details class="hint-container details"><summary>Example: Traveling in Romania</summary><ul><li><strong>States</strong>: The various cities on the map.</li><li><strong>Initial State</strong>: <code>In(Arad)</code></li><li><strong>Goal Test</strong>: <code>Is In(Bucharest)?</code></li><li><strong>Actions</strong>: <code>Go(city)</code>, e.g., <code>Go(Sibiu)</code>.</li><li><strong>Transition Model</strong>: <code>RESULT(In(Arad), Go(Sibiu))</code> returns <code>In(Sibiu)</code>.</li><li><strong>Path Cost</strong>: The sum of the distances between cities on the path.</li></ul></details><hr><h3 id="tree-search-vs-graph-search" tabindex="-1"><a class="header-anchor" href="#tree-search-vs-graph-search"><span>Tree Search vs. Graph Search</span></a></h3><p>As an agent explores the state space, it builds a search tree. However, this can lead to problems with repeated states.</p>',4)),n(d,{id:"108",data:[{id:"Tree Search"},{id:"Graph Search"}]},{title0:e(({value:r,isActive:p})=>a[19]||(a[19]=[t("Tree Search",-1)])),title1:e(({value:r,isActive:p})=>a[20]||(a[20]=[t("Graph Search",-1)])),tab0:e(({value:r,isActive:p})=>[a[28]||(a[28]=s("p",null,"A tree search algorithm explores the state space by building a search tree where each node represents a state and each edge is an action.",-1)),s("ul",null,[s("li",null,[a[22]||(a[22]=s("strong",null,"Process",-1)),a[23]||(a[23]=t(": It starts at the root (initial state) and expands nodes, adding their successors to the ",-1)),a[24]||(a[24]=s("strong",null,"frontier",-1)),a[25]||(a[25]=t()),n(c,{label:"frontier",total:1},{"item-0":e(()=>a[21]||(a[21]=[s("p",null,"The set of all leaf nodes available for expansion at any given point in a search.",-1)])),_:1}),a[26]||(a[26]=t(" of unexpanded nodes.",-1))]),a[27]||(a[27]=s("li",null,[s("strong",null,"Major Flaw"),t(": It does not keep track of previously visited states. This can lead to "),s("mark",{class:"danger"},"getting stuck in infinite loops"),t(" if the state space contains cycles (e.g., Arad → Sibiu → Arad). It may also explore redundant, less optimal paths to the same state.")],-1))])]),tab1:e(({value:r,isActive:p})=>a[29]||(a[29]=[s("p",null,"A graph search improves upon tree search by actively handling repeated states.",-1),s("ul",null,[s("li",null,[s("strong",null,"Process"),t(": In addition to the frontier, it maintains an "),s("strong",null,"explored set"),t(' (or "closed list") of all nodes that have already been expanded.')]),s("li",null,[s("strong",null,"Key Improvement"),t(": When expanding a node, if a successor state is already in the explored set or the frontier, the algorithm can ignore it or update the path if the new path is cheaper. This "),s("mark",{class:"success"},"prevents infinite loops and prunes redundant paths"),t(", making it far more efficient in many problems.")])],-1)])),_:1}),a[42]||(a[42]=s("hr",null,null,-1)),a[43]||(a[43]=s("h3",{id:"uninformed-search-strategies",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#uninformed-search-strategies"},[s("span",null,"Uninformed Search Strategies")])],-1)),a[44]||(a[44]=s("p",null,`Uninformed (or "blind") search strategies explore the state space without any extra information about how close a state is to the goal. The only information they use is what's provided in the problem formulation.`,-1)),a[45]||(a[45]=s("p",null,[t("The primary difference between these strategies is the "),s("strong",null,"order"),t(" in which they expand nodes from the frontier.")],-1)),n(g,null,{default:e(()=>[n(m,{title:"Breadth-First Search (BFS)",icon:"mdi:arrow-expand-horizontal"},{default:e(()=>a[30]||(a[30]=[s("p",null,[t("BFS explores level by level. It expands the "),s("mark",{class:"tip"},"shallowest unexpanded node"),t(" first. This is achieved by managing the frontier as a "),s("strong",null,"FIFO (First-In, First-Out)"),t(" queue.")],-1),s("ul",null,[s("li",null,[s("strong",null,"Complete?"),t(" Yes.")]),s("li",null,[s("strong",null,"Optimal?"),t(" Yes, but only if all action costs are identical.")]),s("li",null,[s("strong",null,"Complexity"),t(": Time and space are "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mi",null,"d")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(b^d)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])])])])])]),s("span",{class:"mclose"},")")])])]),t(".")])],-1)])),_:1,__:[30]}),n(m,{title:"Uniform-Cost Search (UCS)",icon:"mdi:cash-multiple"},{default:e(()=>a[31]||(a[31]=[s("p",null,[t("UCS expands the node with the "),s("mark",{class:"tip"},[t("lowest path cost ("),s("code",null,"g(n)"),t(")")]),t(" from the initial state. It is like BFS but prioritizes cost over depth. The frontier is managed as a "),s("strong",null,"priority queue"),t(".")],-1),s("ul",null,[s("li",null,[s("strong",null,"Complete?"),t(" Yes (if action costs > 0).")]),s("li",null,[s("strong",null,"Optimal?"),t(" Yes, always finds the cheapest solution.")]),s("li",null,[s("strong",null,"Complexity"),t(": Time and space are "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mrow",null,[s("mn",null,"1"),s("mo",null,"+"),s("mi",null,"f"),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"o"),s("mi",null,"r"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"C"),s("mo",null,"∗")]),s("mi",{mathvariant:"normal"},"/"),s("mi",null,"ϵ"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(b^{1+floor(C^*/\\epsilon)})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.1473em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8973em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"1"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.02778em"}},"oor"),s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.7633em"}},[s("span",{style:{top:"-2.931em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mbin mtight"},"∗")])])])])])])]),s("span",{class:"mord mtight"},"/"),s("span",{class:"mord mathnormal mtight"},"ϵ"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose"},")")])])]),t(", where "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"C"),s("mo",null,"∗")])]),s("annotation",{encoding:"application/x-tex"},"C^*")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6887em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6887em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mbin mtight"},"∗")])])])])])])])])])]),t(" is the cost of the optimal solution.")])],-1)])),_:1,__:[31]}),n(m,{title:"Depth-First Search (DFS)",icon:"mdi:arrow-expand-down"},{default:e(()=>a[32]||(a[32]=[s("p",null,[t("DFS explores as deeply as possible along each branch before backtracking. It expands the "),s("mark",{class:"tip"},"deepest unexpanded node"),t(" first. This is achieved by managing the frontier as a "),s("strong",null,"LIFO (Last-In, First-Out)"),t(" stack.")],-1),s("ul",null,[s("li",null,[s("strong",null,"Complete?"),t(" No, can get stuck in infinite loops.")]),s("li",null,[s("strong",null,"Optimal?"),t(" No.")]),s("li",null,[s("strong",null,"Complexity"),t(": Time is "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mi",null,"m")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(b^m)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.6644em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"m")])])])])])])]),s("span",{class:"mclose"},")")])])]),t(", but space is only "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"b"),s("mi",null,"m"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(bm)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"bm"),s("span",{class:"mclose"},")")])])]),t(", making it very memory-efficient.")])],-1)])),_:1,__:[32]}),n(m,{title:"Depth-Limited Search (DLS)",icon:"mdi:ruler-square"},{default:e(()=>a[33]||(a[33]=[s("p",null,[t("DLS is a modification of DFS that imposes a cutoff on the maximum depth of exploration. It treats any node at depth "),s("code",null,"L"),t(" as having no successors. This "),s("mark",{class:"success"},"solves the infinite loop problem"),t(" of DFS but introduces a new issue: if the solution is deeper than "),s("code",null,"L"),t(", DLS won't find it.")],-1)])),_:1,__:[33]}),n(m,{title:"Iterative Deepening Search (IDS)",icon:"mdi:cached"},{default:e(()=>a[34]||(a[34]=[s("p",null,[t("IDS combines the best of both worlds. It repeatedly runs Depth-Limited Search, incrementally increasing the depth limit: "),s("code",null,"L=0, L=1, L=2, ..."),t(". It seems wasteful, but it is often the preferred uninformed search method when the search space is large and the depth of the solution is unknown.")],-1),s("ul",null,[s("li",null,[s("strong",null,"Complete?"),t(" Yes.")]),s("li",null,[s("strong",null,"Optimal?"),t(" Yes, if all action costs are identical.")]),s("li",null,[s("strong",null,"Complexity"),t(": Time is "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msup",null,[s("mi",null,"b"),s("mi",null,"d")]),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(b^d)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"b"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"d")])])])])])])]),s("span",{class:"mclose"},")")])])]),t(", and space is "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"b"),s("mi",null,"d"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"O(bd)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"b"),s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mclose"},")")])])]),t(".")])],-1)])),_:1,__:[34]})]),_:1}),a[46]||(a[46]=h('<h3 id="summary-of-search-strategies" tabindex="-1"><a class="header-anchor" href="#summary-of-search-strategies"><span>Summary of Search Strategies</span></a></h3><p>Here&#39;s how the uninformed search algorithms stack up based on the four key evaluation criteria.</p><table><thead><tr><th style="text-align:center;">Criterion</th><th style="text-align:center;">Breadth-First</th><th style="text-align:center;">Uniform-Cost</th><th style="text-align:center;">Depth-First</th><th style="text-align:center;">Depth-Limited</th><th style="text-align:center;">Iterative Deepening</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>Complete?</strong></td><td style="text-align:center;">Yes</td><td style="text-align:center;">Yes</td><td style="text-align:center;">No</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes</td></tr><tr><td style="text-align:center;"><strong>Optimal?</strong></td><td style="text-align:center;">Yes (if costs are equal)</td><td style="text-align:center;">Yes</td><td style="text-align:center;">No</td><td style="text-align:center;">No</td><td style="text-align:center;">Yes (if costs are equal)</td></tr><tr><td style="text-align:center;"><strong>Time Complexity</strong></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mrow><mn>1</mn><mo>+</mo><mo stretchy="false">⌊</mo><msup><mi>C</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><mi>ϵ</mi><mo stretchy="false">⌋</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^{1+\\lfloor C^*/\\epsilon \\rfloor})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1473em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8973em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mopen mtight">⌊</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7633em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight">ϵ</span><span class="mclose mtight">⌋</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mi>m</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mi>L</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^L)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td></tr><tr><td style="text-align:center;"><strong>Space Complexity</strong></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mi>d</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0991em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>b</mi><mrow><mn>1</mn><mo>+</mo><mo stretchy="false">⌊</mo><msup><mi>C</mi><mo>∗</mo></msup><mi mathvariant="normal">/</mi><mi>ϵ</mi><mo stretchy="false">⌋</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(b^{1+\\lfloor C^*/\\epsilon \\rfloor})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1473em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8973em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mopen mtight">⌊</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7633em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight">ϵ</span><span class="mclose mtight">⌋</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>b</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(bm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">bm</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>b</mi><mi>L</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(bL)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord mathnormal">L</span><span class="mclose">)</span></span></span></span></td><td style="text-align:center;"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>b</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(bd)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></td></tr></tbody></table><p><em>Where:</em></p><ul><li><code>b</code> = branching factor</li><li><code>d</code> = depth of the shallowest solution</li><li><code>m</code> = maximum depth of the state space</li><li><code>L</code> = depth limit for DLS</li><li><code>C*</code> = cost of the optimal solution</li></ul>',5))])}const S=u(x,[["render",v]]),M=JSON.parse('{"path":"/fit3080/o9dc7deh/","title":"Solving Problems by Searching","lang":"en-US","frontmatter":{"title":"Solving Problems by Searching","createTime":"2025/08/03 17:32:21","permalink":"/fit3080/o9dc7deh/"},"readingTime":{"minutes":15.15,"words":1212},"git":{"createdTime":1754880529000,"updatedTime":1754880529000,"changelog":[{"hash":"c2b362dac856e933b1711b784597a85ce3ce7450","time":1754880529000,"email":"yunfeng.long@yahoo.com","author":"WARREN Y.F. LONG","message":"feat: add search notes for AI"}]},"filePathRelative":"notes/fit3080/search/1.search_basic.md","headers":[]}');export{S as comp,M as data};
