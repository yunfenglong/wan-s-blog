import{a as c,c as g,d as i,e as n,w as t,r as a,o as m,f as s}from"./app-C7AwxLk6.js";const u={},f={class:"vp-field-group"};function v(b,e){const p=a("VPCard"),h=a("VPCardGrid"),o=a("VPIcon"),d=a("VPTimelineItem"),k=a("VPTimeline"),l=a("VPCollapseItem"),y=a("VPCollapse"),r=a("VPField");return m(),g("div",null,[e[20]||(e[20]=i("div",{class:"hint-container note"},[i("p",{class:"hint-container-title"},"Note"),i("p",null,"TypeScript was created by Microsoft in 2012 as a superset of JavaScript that adds static type definitions. It was developed to help developers build large-scale JavaScript applications by providing type safety while maintaining JavaScript's flexibility and runtime behavior.")],-1)),e[21]||(e[21]=i("h3",{id:"fundamental-concepts",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#fundamental-concepts"},[i("span",null,"Fundamental Concepts")])],-1)),e[22]||(e[22]=i("p",null,"TypeScript's core is built on type safety and compile-time checking, providing JavaScript developers with tools to catch errors before runtime.",-1)),n(h,null,{default:t(()=>[n(p,{title:"Type Annotations",icon:"mdi:code-braces"},{default:t(()=>e[0]||(e[0]=[i("p",null,[s("Type annotations in TypeScript come after the variable name's declaration using the colon syntax ("),i("code",null,":"),s("). The TypeScript compiler features sophisticated type inference, making many annotations optional while still providing type safety.")],-1)])),_:1,__:[0]}),n(p,{title:"Primitive Types",icon:"mdi:variable"},{default:t(()=>e[1]||(e[1]=[i("p",null,[s("TypeScript includes primitive types "),i("code",null,"number"),s(", "),i("code",null,"string"),s(", and "),i("code",null,"boolean"),s(". These are distinct from their capitalized counterparts ("),i("code",null,"Number"),s(", "),i("code",null,"String"),s(", "),i("code",null,"Boolean"),s(") which are object wrappers and should not be used in type definitions.")],-1)])),_:1,__:[1]}),n(p,{title:"Type Safety",icon:"mdi:shield-check"},{default:t(()=>e[2]||(e[2]=[i("p",null,"TypeScript prevents variables from being assigned values of different types, catching common programming errors at compile time rather than runtime. This provides immediate feedback in development environments like VS Code.",-1)])),_:1,__:[2]})]),_:1}),e[23]||(e[23]=i("hr",null,null,-1)),e[24]||(e[24]=i("h3",{id:"type-annotations-and-inference",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#type-annotations-and-inference"},[i("span",null,"Type Annotations and Inference")])],-1)),e[25]||(e[25]=i("p",null,"TypeScript provides a powerful type system that can infer types from context while allowing explicit annotations when needed.",-1)),n(k,{card:void 0},{default:t(()=>[n(d,{time:"Step 1",icon:"mdi:code-tags",card:void 0},{icon:t(()=>[n(o,{provider:"iconify",name:"mdi:code-tags"})]),title:t(()=>e[3]||(e[3]=[i("strong",null,"Basic Type Annotations",-1)])),default:t(()=>[e[4]||(e[4]=i("p",null,"Type annotations follow the variable name and precede any assignment. TypeScript can often infer the type from the literal value, making annotations optional in simple cases.",-1)),e[5]||(e[5]=i("div",{class:"language-typescript line-numbers-mode","data-highlighter":"shiki","data-ext":"typescript",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-typescript"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"let "),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"i"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),i("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}}," 123"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";"),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"        // Explicit annotation")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"let "),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"j"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}}," 456"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";"),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"                // Type inferred as number")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"let "),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"message"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),i("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"string"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),i("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},' "'),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}},"Hello"),i("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"let "),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"isActive"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),i("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"boolean"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}}," true"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1))]),_:1,__:[4,5]}),n(d,{time:"Step 2",icon:"mdi:shield-alert",placement:"right",card:void 0},{icon:t(()=>[n(o,{provider:"iconify",name:"mdi:shield-alert"})]),title:t(()=>e[6]||(e[6]=[i("strong",null,"Type Safety in Action",-1)])),default:t(()=>[e[7]||(e[7]=i("p",null,"TypeScript catches type mismatches at compile time, preventing runtime errors. The compiler provides detailed error messages in development environments.",-1)),e[8]||(e[8]=i("div",{class:"language-typescript line-numbers-mode","data-highlighter":"shiki","data-ext":"typescript",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-typescript"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"let "),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"counter"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}}," 0"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"counter"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," ="),i("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},' "'),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}},"hello"),i("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";"),i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"  // Error: Type 'string' is not assignable to type 'number'")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1))]),_:1,__:[7,8]}),n(d,{time:"Step 3",icon:"mdi:function-variant",card:void 0},{icon:t(()=>[n(o,{provider:"iconify",name:"mdi:function-variant"})]),title:t(()=>e[9]||(e[9]=[i("strong",null,"Function Type Annotations",-1)])),default:t(()=>[e[10]||(e[10]=i("p",null,"Function parameters and return types can be annotated, providing clear contracts for function usage and catching errors in function calls.",-1)),e[11]||(e[11]=i("div",{class:"language-typescript line-numbers-mode","data-highlighter":"shiki","data-ext":"typescript",style:{"--shiki-light":"#393a34","--shiki-dark":"#dbd7caee","--shiki-light-bg":"#ffffff","--shiki-dark-bg":"#121212"}},[i("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code"},[i("code",{class:"language-typescript"},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"function"),i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}}," add"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"("),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}},"x"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),i("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},","),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," y"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},": "),i("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}},"number"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"):"),i("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," number"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"  return"),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," x"),i("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," +"),i("span",{style:{"--shiki-light":"#B07D48","--shiki-dark":"#BD976A"}}," y"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"}")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"// Error: Argument of type 'string' is not assignable to parameter of type 'number'")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#59873A","--shiki-dark":"#80A665"}},"add"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"("),i("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"5"),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},","),i("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},' "'),i("span",{style:{"--shiki-light":"#B56959","--shiki-dark":"#C98A7D"}},"10"),i("span",{style:{"--shiki-light":"#B5695977","--shiki-dark":"#C98A7D77"}},'"'),i("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},");")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1))]),_:1,__:[10,11]})]),_:1}),e[26]||(e[26]=i("hr",null,null,-1)),e[27]||(e[27]=i("h3",{id:"why-typescript-matters",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#why-typescript-matters"},[i("span",null,"Why TypeScript Matters")])],-1)),e[28]||(e[28]=i("p",null,"TypeScript addresses JavaScript's dynamic typing challenges by providing compile-time type checking, making large-scale applications more maintainable and less error-prone.",-1)),n(y,{accordion:"",index:0},{default:t(()=>[n(l,{expand:"",index:0},{title:t(()=>e[12]||(e[12]=[i("strong",null,"Enhanced Developer Experience",-1),s(" TypeScript provides immediate feedback in development environments. Features like autocompletion, error highlighting, and type documentation make development faster and more reliable.",-1)])),_:1}),n(l,{index:1},{title:t(()=>e[13]||(e[13]=[i("strong",null,"Better Code Documentation",-1),s(" Type annotations serve as living documentation that stays in sync with the code. They clearly communicate the expected types and structure of data.",-1)])),_:1}),n(l,{index:2},{title:t(()=>e[14]||(e[14]=[i("strong",null,"Refactoring Confidence",-1),s(" With comprehensive type checking, developers can make changes to large codebases with confidence that the type system will catch any breaking changes.",-1)])),_:1}),n(l,{index:3},{title:t(()=>e[15]||(e[15]=[i("strong",null,"Modern JavaScript Features",-1),s(" TypeScript supports the latest ECMAScript features and can compile to older JavaScript versions, allowing developers to use modern syntax while maintaining browser compatibility.",-1)])),_:1})]),_:1}),e[29]||(e[29]=i("hr",null,null,-1)),e[30]||(e[30]=i("h3",{id:"typescript-vs-javascript",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#typescript-vs-javascript"},[i("span",null,"TypeScript vs JavaScript")])],-1)),e[31]||(e[31]=i("p",null,"Understanding the key differences between TypeScript and JavaScript helps developers appreciate the benefits of static typing.",-1)),i("div",f,[n(r,{name:"Type Checking",type:"string","default-value":"dynamic"},{default:t(()=>e[16]||(e[16]=[i("p",null,"JavaScript performs type checking at runtime, which can lead to unexpected errors. TypeScript performs type checking at compile time, catching errors before code runs.",-1)])),_:1,__:[16]}),n(r,{name:"Type Annotations",type:"boolean","default-value":"false"},{default:t(()=>e[17]||(e[17]=[i("p",null,"JavaScript doesn't support type annotations. TypeScript adds optional type annotations that help catch errors and improve code documentation.",-1)])),_:1,__:[17]}),n(r,{name:"Compilation",type:"boolean","default-value":"false"},{default:t(()=>e[18]||(e[18]=[i("p",null,"JavaScript runs directly in browsers and Node.js. TypeScript requires compilation to JavaScript before execution.",-1)])),_:1,__:[18]}),n(r,{name:"Tooling",type:"string","default-value":"standard"},{default:t(()=>e[19]||(e[19]=[i("p",null,"JavaScript has good tooling support. TypeScript provides enhanced tooling with better autocompletion, refactoring, and error detection.",-1)])),_:1,__:[19]})]),e[32]||(e[32]=i("p",null,"A syntax in TypeScript where types are explicitly specified for variables, function parameters, and return types to ensure type safety and correctness.",-1)),e[33]||(e[33]=i("p",null,"The TypeScript compiler's ability to automatically determine the type of a variable based on its initial value, reducing the need for explicit type annotations.",-1)),e[34]||(e[34]=i("p",null,"A programming language feature where type checking is performed at compile-time rather than runtime, catching errors before the code is executed.",-1)),e[35]||(e[35]=i("p",null,"The process of converting TypeScript code to JavaScript code, removing type annotations and ensuring compatibility with target environments.",-1))])}const T=c(u,[["render",v]]),D=JSON.parse('{"path":"/programming-paradigm/ts/basic/","title":"Introduction to TypeScript","lang":"en-US","frontmatter":{"title":"Introduction to TypeScript","createTime":"2025/08/05 12:00:00","permalink":"/programming-paradigm/ts/basic/"},"readingTime":{"minutes":9.09,"words":727},"git":{"createdTime":1754446377000,"updatedTime":1754446377000,"changelog":[{"hash":"ea91c25c8f7b81aeb4e519572f8f50770e4d0571","time":1754446377000,"email":"yunfeng.long@yahoo.com","author":"WARREN Y.F. LONG","message":"feat: add introductory notes on TypeScript fundamentals and its advantages"}]},"filePathRelative":"notes/programming-paradigm/ts/1.basic.md","headers":[]}');export{T as comp,D as data};
