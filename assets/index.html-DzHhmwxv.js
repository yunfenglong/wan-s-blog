import{a as t,c as n,b as o,o as a}from"./app-C7AwxLk6.js";const i={};function s(r,e){return a(),n("div",null,e[0]||(e[0]=[o('<h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>Welcome to my comprehensive notes on <strong>Theory of Computation</strong>! This fascinating unit explores the fundamental boundaries of what can be computed and how efficiently we can solve problems.</p><p>Throughout this course, we&#39;ll dive deep into the mathematical foundations that define the very essence of computation. From the simplest pattern-matching algorithms to the most complex computational problems, we&#39;ll discover what makes computation possibleâ€”and what makes some problems inherently difficult or even impossible to solve.</p><h3 id="what-you-ll-find-here" tabindex="-1"><a class="header-anchor" href="#what-you-ll-find-here"><span>What You&#39;ll Find Here</span></a></h3><p><strong>Core Topics Covered:</strong></p><ul><li><strong>Formal Languages &amp; Models</strong>: Understanding how we describe and classify different types of computational problems</li><li><strong>Automata Theory</strong>: Finite state machines, pushdown automata, and their practical applications</li><li><strong>Regular Expressions &amp; Grammars</strong>: The building blocks of pattern recognition and language processing</li><li><strong>Turing Machines</strong>: The theoretical foundation of all modern computers</li><li><strong>Computational Complexity</strong>: Exploring the boundaries between tractable and intractable problems</li><li><strong>P vs NP Problem</strong>: One of the most important unsolved problems in computer science</li><li><strong>NP-Completeness</strong>: Understanding the hardest problems in NP and their implications</li></ul><h3 id="current-content" tabindex="-1"><a class="header-anchor" href="#current-content"><span>Current Content</span></a></h3><p>ðŸ“š <strong>Languages</strong> - Detailed exploration of formal language theory and classification</p><p><em>More sections will be added as the course progresses, including practical examples, proof techniques, and problem-solving strategies.</em></p><h3 id="skills-you-ll-develop" tabindex="-1"><a class="header-anchor" href="#skills-you-ll-develop"><span>Skills You&#39;ll Develop</span></a></h3><ul><li><strong>Mathematical Rigor</strong>: Writing formal proofs and mathematical arguments</li><li><strong>Abstract Thinking</strong>: Understanding complex theoretical concepts and their practical implications</li><li><strong>Problem Solving</strong>: Tackling computational problems with systematic approaches</li><li><strong>Critical Analysis</strong>: Evaluating the efficiency and feasibility of different computational approaches</li></ul><hr><p><em>These notes are designed to complement your studies and provide clear explanations with examples. Happy learning! ðŸš€</em></p>',13)]))}const c=t(i,[["render",s]]),p=JSON.parse('{"path":"/fit2014/","title":"FIT2014 Notes","lang":"en-US","frontmatter":{"title":"FIT2014 Notes","tags":["Monash","CS"],"createTime":"2025/08/01 21:44:56","permalink":"/fit2014/"},"readingTime":{"minutes":3.38,"words":270},"git":{"createdTime":1754104093000,"updatedTime":1754104093000,"changelog":[{"hash":"b5283311cd1ed26369d7d9490bfe13eee7f4f7f1","time":1754104093000,"email":"yunfeng.long@yahoo.com","author":"wanfunglung","message":"Update blog title and add FIT2014 notes in English and Chinese"}]},"filePathRelative":"notes/fit2014/README.md","headers":[]}');export{c as comp,p as data};
